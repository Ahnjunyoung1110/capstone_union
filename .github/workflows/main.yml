name: Build the front and back with push

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      # 1. 소스 체크아웃 (서브모듈 포함)
      - name: Checkout with submodules
        uses: actions/checkout@v3
        with:
          submodules: recursive
          token: ${{ secrets.FRONT_PAT }}

      # 2. Docker Build - 백엔드
      - name: Build Backend Image
        run: |
          docker build -t my-backend ./backend

      # 3. Docker Build - 프론트엔드
      - name: Build Frontend Image
        run: |
          docker build -t my-frontend ./frontend

      # 4. Docker Save - tar로 저장
      - name: Save Images to tar
        run: |
          docker save -o backend.tar my-backend
          docker save -o frontend.tar my-frontend
          chmod 644 backend.tar frontend.tar

          
      # 5) tar 파일 EC2로 복사 (SSH/SCP)
      #    SSH 개인키·호스트·사용자명은 GitHub Secrets 로 보관
      - name: Copy images to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host:     ${{ secrets.EC2_HOST }}        # 예: "13.124.xxx.xxx"
          username: ${{ secrets.EC2_USER }}        # 예: "ec2-user" or "ubuntu"
          key:      ${{ secrets.EC2_SSH_KEY }}     # PEM 개인키
          port:     22
          source:   "backend.tar,frontend.tar ,compose.yaml"
          target:   "~/deploy/"                    # EC2 내 배포 디렉터리
    
      # 6) EC2 내부에서 Docker 이미지 로드 + 컨테이너(또는 compose) 재시작
      - name: Deploy on EC2
        uses: appleboy/ssh-action@v0.1.8
        with:
          host:     ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key:      ${{ secrets.EC2_SSH_KEY }}
          port:     22
          script: |
            set -e
            cd ~/deploy
    
            echo "🛠  Docker image load"
            docker load -i backend.tar
            docker load -i frontend.tar

            echo "🧹 Stop and remove old containers (if exist)"
            docker rm -f backend frontend || true
    
            echo "♻️  Restart containers"
            # 👉 방법 1) docker compose 사용
            docker compose down   || true
            docker compose up -d --force-recreate

    
            echo "✅  Deploy done"

